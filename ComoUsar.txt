==== / ====
Como usar o projeto:    
    a) Abra um terminal e navegue até a pasta API usando "cd API/"
    b) Dentro da pasta execute também no terminal o comando dotnet run


==== / ====
Comandos usado para gerar a base do projeto:

1) Criando a solução inicial .NET: dotnet new sln -n BibliotecaApp
2) Crie as pastas e projetos conforme a estrutura:
    a) dotnet new webapi -n API
    b) dotnet new classlib -n Domain
    c) dotnet new classlib -n Core
    d) dotnet new classlib -n Infrastructure
3) Adicione os projetos à solução:
    a) dotnet sln add API/API.csproj
    b) dotnet sln add Domain/Domain.csproj
    c) dotnet sln add Core/Core.csproj
    d) dotnet sln add Infrastructure/Infrastructure.csproj
4) Adicione referências entre os projetos:
    a) dotnet add API/API.csproj reference Core/Core.csproj
    b) dotnet add Core/Core.csproj reference Domain/Domain.csproj
    c) dotnet add Core/Core.csproj reference Infrastructure/Infrastructure.csproj

==== / ====
Estrutura futura do projeto:

BibliotecaApp
    - API // O controlador (LivrosController) recebe uma requisição HTTP e invoca métodos do serviço (IProductService).
        - Controllers
            - LivrosController.cs
        - Program.cs // Script base

    - Core // Modelos e Classes do projeto
        - Models
            - Livro.cs

    - Domain
        - Interfaces
            - ILivroService.cs // Interface para os serviços relacionados aos livros. Servindo como intermediário entre a camada de apresentação (API) e a camada de infraestrutura. 
        - Services
            - LivroService.cs // Implementação da interface ILivroService.cs

    - Infrastructure
        - Interfaces
            - ILivroRepository.cs // Interface que é implementada na camada de infraestrutura para interagir com o banco de dados.
        - Repositório
            - LivroRepository.cs // Implementação da interface ILivroRepository.cs

==== / ====
Exemplo de Fluxo do Projeto:

Criar/Registrar um Livro (Create Livro):
    - API Layer: O cliente faz uma requisição POST para criar um novo livro.
    - Core Layer: O controlador (LivrosController) chama o método CriarLivroAsync do serviço (LivroService).
    - Core Layer: O serviço (LivroService) aplica qualquer lógica de validação ou transformação necessária e então chama CriarLivroAsync do repositório (LivroRepository).
    - Infrastructure Layer: O repositório (LivroRepository) salva o novo produto no banco de dados.
